#! /bin/python3

# Requirements:
# 1. [aligo](https://github.com/foyoux/aligo), which is available on pypi.org
# 2. [aria2c](https://aria2.github.io), optional dependency for downloading
# 2. An (aliyun)[https://www.aliyundrive.com/] account

# Usage Example:
# 1. Generate share link index data in the foler $share_file_list_directory
# > python3 ./aliyun-share https://www.aliyundrive.com/s/wnfVTd1u92T/folder/619010166fe8c7b3e00f4acd813c9ed47b5fbddc
# 2. Find desired file_id in the index file `619010166fe8c7b3e00f4acd813c9ed47b5fbddc.json`,
#   for example, we choose the file `[黎曼几何].Jost.Riemannian.Geometry.and.Geome.pdf` with file_id 619010164dbe4eab5e3f4c5db1611344350e0f2a
# > python3 ./aliyun-share 619010164dbe4eab5e3f4c5db1611344350e0f2a

# Config:
# Modify the variables $share_file_list_directory, $share_id_data_file and $download_dir.


import os
import json
import re
import sys

share_file_list_directory = '$HOME/Archives/Data/Ebooks/Aliyun/'
share_id_data_file = '/tmp/share_id'
download_dir = '/tmp'

if len(sys.argv) == 1:
    # refresh login token
    from aligo import Auth
    Auth(name='aligo')._refresh_token()
    sys.exit()

match_share_id = re.match(r"https://www.aliyundrive.com/s/([^/]+)(/folder)?",
                    sys.argv[1])

if match_share_id:
    share_id = match_share_id.group(1)
else:
    share_id = ''

match_file_id = re.match(r".*([0-9a-f]{40})$", sys.argv[1])
if match_file_id:
    file_id = match_file_id.group(1)
else:
    file_id = ''

download_path = ''
if len(sys.argv) > 2:
    download_path = os.path.expanduser(sys.argv[2])

if share_id == '':
    single_file = True
    if os.path.exists(share_id_data_file):
        print('Reading share id from ' + share_id_data_file)
        f = open(share_id_data_file, 'r')
        share_id = f.read().strip()
        f.close()
    else:
        print('No way to determinate share_id, exiting...')
        exit()
else:
    single_file = False

f = open(share_id_data_file, 'w')
f.write(share_id)
f.close()

from aligo import Aligo
from dataclasses import asdict

ali = Aligo(use_aria2=True)
share_info = ali.get_share_info(share_id)
share_token = ali.get_share_token(share_id)
if share_info.file_infos[0].type == 'folder' and not single_file:
    save_path = share_file_list_directory + file_id + '.json'
    if os.path.exists(save_path):
        print('file list data exits as ' + save_path)
        exit()

    f = open(save_path, 'w',
             encoding='utf8')
    file_list = ali.get_share_file_list(share_id=share_id,
                                        share_token=share_token,
                                        parent_file_id=file_id)
    f.write('[' + ',\n'.join([
        json.dumps(asdict(file), indent=4, ensure_ascii=False).encode(
            'utf8').decode() for file in file_list
    ]) + ']')
    f.close()
    print('file list data saved to the directory ' +
          share_file_list_directory)
else:
    if file_id == '':
        file_id = share_info.file_infos[0].file_id
    download_url = ali.get_share_link_download_url(
        share_id=share_id, share_token=share_token,
        file_id=file_id).download_url
    if download_path == '':
        download_path = download_dir + '/' + ali.get_share_file(
            share_id=share_id,
            share_token=share_token.share_token,
            file_id=file_id).name
    ali.download_file(file_path=download_path, url=download_url)
